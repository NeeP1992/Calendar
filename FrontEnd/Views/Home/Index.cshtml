@{
    ViewBag.Title = "Calendar Test UI";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@section HeaderIncludes
{
    <link href="/css/fullcalendar.min.css" rel="stylesheet"/>
    <link href="/css/fullcalendar.print.min.css" rel="stylesheet" media="print"/>
    <script src="/js/moment.min.js"></script>
    <script src="/js/jquery.min.js"></script>
    <script src="/js/fullcalendar.min.js"></script>
    <script src="/js/event_calendar.js"></script>
    <script src="/js/datetime.format.js"></script>

    <script type="text/javascript">

        $(document)
            .ready(function() {

                $('#calendar')
                    .fullCalendar({
                        header: {
                            left: 'prev,next today',
                            center: 'title',
                            right: 'listDay,listWeek,month'
                        },

                        // customize the button names,
                        // otherwise they'd all just say "list"
                        views: {
                            listDay: { buttonText: 'list day' },
                            listWeek: { buttonText: 'list week' }
                        },

                        defaultView: 'month',
                        navLinks: true, // can click day/week names to navigate views
                        editable: true,
                        eventLimit: true, // allow "more" link when too many events
                        events: '/home/fetchevents',
                        eventClick: RenderEvent,
                        navLinkDayClick: function (date) {
                            var dateNow = new Date();
                            var theDate = new Date(date.year(), date.month(), date.date(), dateNow.getHours(), dateNow.getMinutes(), 0, 0);
                            var endDate = theDate.addHours(1);
                            $('#event_start').val(dateFormat(theDate, 'yyyy-mm-dd HH:MM:ss'));
                            $('#event_end').val(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));
                        }
                    });
            });

        Date.prototype.addHours = function (h) {
            this.setTime(this.getTime() + (h * 60 * 60 * 1000));
            return this;
        }

    </script>

    <style>
        body {
            margin: 40px 10px;
            padding: 0;
           font-family: Arial, Helvetica, sans-serif;
            font-size: 14px;
        }

        #calendar, #eventDetail {
            max-width: 900px;
            margin: 0 auto;
        }

        #eventDetail table {
            border: 1px #ddd solid;
            border-collapse: collapse;
            width: 100%;
        }

        #eventDetail td, #eventDetail th {
            border: 1px #ddd solid;
            padding: 15px;
        }

        input[type=text] {
            border: 1px #ddd solid;
        }

        #event_title {
            width: 100%;
            height: 125px;
        }

        #event_validation {
            padding-bottom: 15px;
            font-size: 1.1em;
            font-weight: bold;
        }
        .success { color: green; }

        .error { color: red; }

    </style>

}

<div id="calendar"></div>

<div id="eventDetail">
    <h2 id="event_heading">Create Event</h2>
    <div style="display: none" id="event_validation">
        <!-- Validation message displayed here if the event isn't valid -->
    </div>
    <table>
        <tr style="display: none;" id="tr_id">
            <td>Id</td>
            <td id="event_id" colspan="3"></td>
        </tr>
        <tr>
            <td>Start</td>
            <td>
                <input id="event_start" value="@DateTime.Now.AddMinutes(15).ToString("yyyy-MM-dd HH:mm:00")"/>
            </td>
            <td>End</td>
            <td>
                <input id="event_end" value="@DateTime.Now.AddMinutes(75).ToString("yyyy-MM-dd HH:mm:00")"/>
            </td>
        </tr>
        <tr>
            <td>Description</td>
            <td colspan="3">
                <textarea id="event_title">@(Model == null ? string.Empty : Model.title)</textarea>
            </td>
        </tr>
        <tr id="tr_delete" style="display: none;">
            <td colspan="4">
                <input type="button" id="event_delete" onclick="DeleteEvent();" value="Delete Event"/>
            </td>
        </tr>
        <tr id="tr_savenew">
            <td colspan="4">
                <input type="button" onclick="CreateEvent()" value="Save New Event"/>
            </td>
        </tr>
    </table>
</div>